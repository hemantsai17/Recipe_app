{"ast":null,"code":"import { applyMiddleware, compose } from \"redux\";\nimport { legacy_createStore as createStore } from 'redux';\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./saga\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(logger);\n}\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\n// const store = configureStore({\n//     reducer: rootReducer,\n//     // middleware: getDefaultMiddleware().concat(sagaMiddleware)\n//      middleware: [sagaMiddleware, logger],\n// })\n\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"names":["applyMiddleware","compose","legacy_createStore","createStore","logger","createSagaMiddleware","rootReducer","rootSaga","configureStore","getDefaultMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","run"],"sources":["C:/Users/heman/Desktop/recipe-book/src/redux/store.js"],"sourcesContent":["import { applyMiddleware, compose } from \"redux\"; \r\nimport { legacy_createStore as createStore } from 'redux'\r\nimport logger from \"redux-logger\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootReducer  from \"./rootReducer\";\r\nimport rootSaga from \"./saga\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middleware = [sagaMiddleware]\r\n\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middleware.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\n// const store = configureStore({\r\n//     reducer: rootReducer,\r\n//     // middleware: getDefaultMiddleware().concat(sagaMiddleware)\r\n//      middleware: [sagaMiddleware, logger],\r\n// })\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAASC,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AACzD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,MAAO,eAAe;AACxC,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,oBAAoB,QAAQ,kBAAkB;AAGvD,MAAMC,eAAe,GAAGC,MAAM,CAACC,oCAAoC,IAAIX,OAAO;AAE9E,MAAMY,cAAc,GAAGR,oBAAoB,CAAC,CAAC;AAE7C,MAAMS,UAAU,GAAG,CAACD,cAAc,CAAC;AAGnC,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EACxCH,UAAU,CAACI,IAAI,CAACd,MAAM,CAAC;AAC3B;AAEA,MAAMe,KAAK,GAAGhB,WAAW,CAACG,WAAW,EAAEN,eAAe,CAAC,GAAGc,UAAU,CAAC,CAAC;;AAEtE;AACA;AACA;AACA;AACA;;AAEAD,cAAc,CAACO,GAAG,CAACb,QAAQ,CAAC;AAE5B,eAAeY,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}